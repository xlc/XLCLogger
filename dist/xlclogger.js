// Generated by CoffeeScript 1.10.0
(function() {
  var create_logger, io, sequence,
    slice = [].slice;

  io = require('socket.io-client');

  sequence = 0;

  create_logger = function(socket, scope) {
    var _log, log;
    if (scope == null) {
      scope = [];
    }
    _log = function() {
      var args, level;
      level = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (scope.length) {
        console[level].apply(console, [scope.join('|')].concat(slice.call(args)));
      } else {
        console[level].apply(console, args);
      }
      socket.emit('message', {
        level: level,
        scope: scope,
        id: ++sequence,
        timestampe: new Date,
        message: args
      });
    };
    log = _log.bind(null, 'log');
    return _.assign(log, {
      debug: _log.bind(null, 'debug'),
      log: _log.bind(null, 'log'),
      info: _log.bind(null, 'info'),
      warn: _log.bind(null, 'warn'),
      error: _log.bind(null, 'error'),
      scope: function(innerScope) {
        if (innerScope == null) {
          innerScope = Math.random().toString(36).substr(2, 5);
        }
        return create_logger(socket, scope.concat(innerScope));
      }
    });
  };

  module.exports = function(server, name, session) {
    var socket;
    socket = io(server);
    socket.on('connect', function() {
      return socket.emit('register', {
        type: 'logger',
        name: name,
        session: session != null ? session : new Date().toISOString()
      });
    });
    return create_logger(socket);
  };

}).call(this);
